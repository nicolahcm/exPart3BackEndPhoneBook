{"version":3,"sources":["components/filterPerson.js","components/personsRender.js","components/personForm.js","components/notification.js","services/persons.js","components/app.js","index.js"],"names":["FilterPersons","filterText","handleFilterchange","matchPeople","type","value","onChange","map","name","Persons","persons","handleDelete","person","number","onClick","data-id","id","PersonForm","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","Notification","message","successOrError","className","baseUrl","axios","get","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilterText","setMatchPeople","errorMessage","setErrorMessage","setSuccessOrError","useEffect","personsServices","then","response","data","event","target","lowerCase","toLocaleLowerCase","matchingList","filter","includes","preventDefault","personWithSameName","find","window","confirm","idOfPerson","updatedPerson","res","console","log","setTimeout","catch","error","objectNewPerson","idObject","concat","e","parseInt","getAttribute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95f2943d.chunk.js","sourcesContent":["import React from 'react'\n\n\n\n\nconst FilterPersons = ({ filterText, handleFilterchange, matchPeople }) => {\n    return (\n        <div>\n            <h2>Research a Person</h2>\n            <input type=\"text\" value={filterText} onChange={handleFilterchange} />\n\n            <h4> People matched: </h4>\n            {matchPeople.map(name => <p key={name}>{name}</p>)}\n        </div>\n    )\n}\n\n\n\nexport default FilterPersons","import React from 'react'\n\nconst Persons = ({ persons, handleDelete }) => {\n    return (\n        <div>\n            {persons.map(person =>\n                <p key={person.id}>{person.name}: {person.number}\n                    <button onClick={handleDelete} data-id={person.id}>\n                        Delete\n                    </button>\n                </p>)}\n        </div>\n    )\n}\n\n\nexport default Persons","import React from 'react'\n\n\nconst PersonForm = ({ newName, newNumber,\n    addPerson, handleNameChange,\n    handleNumberChange }) => {\n\n\n    return (\n        <div>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={handleNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\" >add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default PersonForm","import React from 'react';\n\n\nconst Notification = ({ message, successOrError }) => {\n    if (message === null) {\n        return null\n\n    }\n\n    return (\n        <div className={successOrError}>\n            {message}\n        </div>\n    )\n\n\n\n}\n\nexport default Notification","import axios from 'axios';\n\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    deletePerson,\n}","import React, { useState, useEffect } from 'react';\nimport FilterPersons from './filterPerson';\nimport Persons from './personsRender';\nimport PersonForm from './personForm';\nimport Notification from './notification';\n\n// services controller for HTTP requests.\nimport personsServices from '../services/persons'\n\n\n\n\nconst App = () => {\n\n    /// States\n\n    // all people\n    const [persons, setPersons] = useState([])\n\n    // states for controlling input forms\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterText, setFilterText] = useState('')\n\n    // matching people for the filter.\n    const [matchPeople, setMatchPeople] = useState([])\n\n    // states for managing the notification. \n    const [errorMessage, setErrorMessage] = useState(null)  // this is the msg\n    const [successOrError, setSuccessOrError] = useState('success') // this is for different styling between success and failure\n\n\n\n    // useEffect\n    useEffect(() => {\n        personsServices.getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }, [])\n\n    //// Event handlers \n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    // add or update a person.\n    const addPerson = (event) => {\n        event.preventDefault()\n        let personWithSameName = persons.find(person => person.name.toLocaleLowerCase() === newName.toLocaleLowerCase())\n\n        if (personWithSameName) {\n            let confirmationUpdate = window.confirm(`the user ${personWithSameName} is already in the db. Update the number?`)\n\n            if (confirmationUpdate) {\n                let idOfPerson = personWithSameName.id\n\n                // trick of updating the object\n                let updatedPerson = { ...personWithSameName, number: newNumber }\n\n                // trick for changing one element in the list\n                setPersons(persons.map(person => person.id === idOfPerson ? updatedPerson : person))\n\n                // put request.\n                personsServices\n                    .update(idOfPerson, updatedPerson)\n                    .then(res => {\n                        console.log(res);\n                        setErrorMessage(`Person correctly updated!`);\n                        setSuccessOrError('success')\n\n                        setTimeout(() => setErrorMessage(null), 5000)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setErrorMessage(`Information of ${personWithSameName.name} has already been deleted from the server!`);\n                        setSuccessOrError('error')\n\n                        setTimeout(() => setErrorMessage(null), 5000)\n                    })\n            }\n\n        } else {\n\n            const objectNewPerson = { name: newName, number: newNumber }\n            // saving it in the db (and then displaying it after\n            // retrieving the id.)\n            personsServices.create(objectNewPerson)\n                .then(response => {\n                    let idObject = response.data.id\n                    console.log(idObject)\n\n                    objectNewPerson.id = idObject\n                    setPersons(persons.concat(objectNewPerson))\n\n                    setErrorMessage(`Person correctly added!`);\n                    setSuccessOrError('success')\n\n                    setTimeout(() => setErrorMessage(null), 5000)\n                })\n\n\n            // cleaning fields\n            setNewName(\"\")\n            setNewNumber(\"\")\n        }\n    }\n\n    const handleFilterchange = (event) => {\n        // controlling the input of filter.\n        setFilterText(event.target.value)\n\n        let lowerCase = filterText.toLocaleLowerCase()\n        let namesList = persons.map(person => person.name.toLocaleLowerCase())\n        let matchingList = namesList.filter(name => name.includes(lowerCase))\n\n        setMatchPeople(matchingList)\n    }\n\n    const handleDelete = (e) => {\n\n        let wantDelete = window.confirm('Are you sure you want to delete?')\n\n        if (wantDelete) {\n            const id = parseInt(e.target.getAttribute('data-id'))\n\n            // deleting from UI\n            setPersons(persons.filter(person => person.id !== id))\n\n            // deleting from DB\n            personsServices\n                .deletePerson(id)\n                .then(response => console.log(response))\n        }\n    }\n\n    return (\n        <div>\n            <FilterPersons\n                handleFilterchange={handleFilterchange}\n                matchPeople={matchPeople}\n                filterText={filterText} />\n\n            <Notification\n                message={errorMessage}\n                successOrError={successOrError} />\n\n            <h2>Numberbook</h2>\n\n            <PersonForm\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                addPerson={addPerson}\n                newName={newName}\n                newNumber={newNumber} />\n\n            <h2>Numbers</h2>\n            <Persons\n                persons={persons}\n                handleDelete={handleDelete} />\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}